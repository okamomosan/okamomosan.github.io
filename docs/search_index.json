[["index.html", "行動経済学の実証分析 Chapter 1 Ready? 1.1 R(Studio)とは？ 1.2 Tips! 1.3 R(Studio)のインストール", " 行動経済学の実証分析 Tomohisa OKADA 2023-04-26 Chapter 1 Ready? 1.1 R(Studio)とは？ Rは、オープンソースで利用可能な統計解析に特化したプログラミング言語 RStudioは、Rを使うための統合開発環境（なくてもRは使えるが、あるとめちゃ便利！） 1.2 Tips! Rに関するお役立ちサイトや書籍をまとめる 「卒業論文のためのR入門」 by 森知春先生 Rの使い方と心理統計学の基礎が一挙に学べる！ 「私たちのR」 by 宋財泫先生 &amp; 矢内勇生先生 辞書的に使える！Tidyverseを使ったモダンなRのプログラムが学べる！ 1.3 R(Studio)のインストール 次のサイトにアクセス( https://posit.co/download/rstudio-desktop/ ) 「1:Install R」からRをインストール 「2:Install RStudio」からRStudioをインストール うまくインストールできない場合は、「私たちのR」に詳しい解説がある "],["go.html", "Chapter 2 Go!! 2.1 RStudioを開く 2.2 コンソールに直接打ち込む 2.3 Rスクリプトを使う 2.4 プロジェクト管理", " Chapter 2 Go!! とりあえずまずは使ってみよう！ 2.1 RStudioを開く RStudioのアイコンから起動 次のような、４つの枠（ペーン）に分かれた画面が表示される ①左上：メインの作業場でコードを書くところ ②右上：変数やオブジェクトのリストが表示されたり、バージョン管理を行う ③左下：コードの実行結果が表示されるコンソールや、各種コマンドを実行するターミナルなど ④右下：各種ファイルやパッケージの表示、出力した図の表示など 2.2 コンソールに直接打ち込む RStudioの左下のペーンを見る Consoleのタブが選択されていることを確認 簡単な足し算を実行しよう 最下段の&gt;のあとに1+1と打ち込みEnter（macはreturn）を押す [1] 2と返ってくる 2の部分が1+1の計算結果（[1]は1行目という意味） 2.3 Rスクリプトを使う コンソールに書いたコードは、Rstudioを終了すると消える （実際に終了して再起動してみよう） だから、保存可能なRスクリプトにコードを書くことが多い Rスクリプトに書く： RStudioの左上の をクリックし、「R Script」を選択 空のRスクリプトファイルが作成され、左上のペーンに表示される 1行目に1+1と入力してctrl+Enter（macはcommand+return）を押す （ をクリックしても良い） 左下のペーンのコンソールに結果([1] 2)が表示される 保存： Rスクリプトはctrl+s（macはcommand+s）で好きな時に保存できる 初回はファイル名と保存場所も決める 試しに、保存したRスクリプトのタブを閉じてみよう （タブの右側の×をクリック） 左上の をクリックし、保存したRスクリプトのファイルを選択 Rスクリプトが先ほど保存した状態で開く さらに書く！： 続けて、簡単な引き算を実行しよう 2行目に5-2と入力する 2行目にカーソルを合わせてctrl+Enterを押す 2行目の計算結果([1] 3)が表示される 1行目にカーソルを合わせてctrl+Enterを押す 1行目の計算結果([1] 2)が表示される つまり、実行したい行にカーソルを合わせてctrl+Enterを押せば良い 全ての行を一括で実行したいならctrl+shift+Enter（macはcommand+shift+return） 一部分だけ実行したいなら、下図のように実行したい行だけ選択してctrl+Enter Rスクリプトを使うメリット： コードが保存できる（毎回書き直さなくて良い！） 長く複雑なコードを書いたり、管理するのが楽 他の人に配布できる（分析を再現してもらいやすい） などなど… 2.4 プロジェクト管理 研究プロジェクトが進むと、ひとつのRスクリプトだけでは管理しきれなくなる プロジェクトを使えば、複数のRスクリプトや関連データなどを一つのフォルダにまとめて効率よく管理できる プロジェクトの作成： 左上の をクリックし、「New Directry」→「New Project」の順に選択 次の画面で①プロジェクト名と、その②作成場所を指定して③「Create Project」 指定した場所に、指定したプロジェクト名のフォルダができているのを確認しよう そのフォルダの中に「プロジェクト名.Rproj」というファイルができているのを確認しよう 以下は、macでDocumentフォルダ内にsugoi_projectというプロジェクトを作った例 初めはご利益がわかりにくいが、研究プロジェクトごとにプロジェクトを作るクセをつけよう そして、次の心得に従い、プロジェクト上で作業をするようにしよう！ 毎回「プロジェクト名.Rproj」をダブルクリックしてRstudioを起動 関連するファイルはプロジェクト名のフォルダにまとめて一元管理 "],["基本操作.html", "Chapter 3 基本操作 3.1 オブジェクト 3.2 簡単な計算 3.3 5.3 関数 3.4 データフレーム", " Chapter 3 基本操作 現状では、ベースにした森先生の資料の丸写しです GW明けまでに完成させるので、外に出さないでください 森先生の以下の動画を参考にしてください GW明けまでに全ての練習問題のコードをひとつのRスクリプトに書いて提出 3.1 オブジェクト Rで使用するあらゆる「モノ」はオブジェクト（object）と呼ばれ管理されます。 オブジェクトの準備からRの分析はスタートします。まずは、オブジェクトを準備してみましょう。 first_object &lt;- 1 オブジェクトは「名前」と「中身」で構成されます。 このコマンドでは、first_objectという名前のオブジェクトに「1」という数値を入れています。 &lt;-（不等号・ハイフン）は矢印を表していて、左側の名前のオブジェクトに右側の「モノ」を代入する命令です。 このコマンドを実行しても何も表示されませんが、それでOKです。 オブジェクトの名前を指定すると、オブジェクトの中身を表示させることができます。 first_object ## [1] 1 [1]は「1行目」を意味しています。そのあとの「1」が中身です。 また、代入する命令を()でくくることで、代入させつつ表示させることができます。 second_objectに2を入れて表示させてみましょう。 (second_object &lt;- 2) ## [1] 2 文字列をオブジェクトに入れることもできます。 この場合、文字列を”“（引用符）でくくります。 first_string_object &lt;- &quot;Ritsumeikan University&quot; first_string_object ## [1] &quot;Ritsumeikan University&quot; ここでは、first_string_objectという名前のオブジェクトに、文字列”Ritsumeikan University”を入れています。 オブジェクトに入れるものは1つの値ではなく、複数の値にすることもできます。 複数の値を並べたものは「ベクトル」と呼ばれます。 ベクトルはc()でまとめます。 first_vector_object &lt;- c(1, 2, 3, 4, 5) first_vector_object ## [1] 1 2 3 4 5 ここでは、first_vector_objectというオブジェクトに、1から5までの数値を代入しています。 文字列のベクトルも作ることができるので、試してみてください。 練習問題 third_objectという名前のオブジェクトに10000を代入し、確認してください。 my_nameという名前のオブジェクトにあなたの名前（文字列）を代入し、確認してください。 second_vector_objectという名前のオブジェクトに数値のベクトル1, 1, 2, 3, 5, 8を代入し、確認してください。 3.2 簡単な計算 Rでの簡単な計算をしてみましょう。足し算・引き算は日常用語と同じく+, -を用います。 1 + 1 ## [1] 2 5 - 2 ## [1] 3 掛け算は*、割り算は/を使います。また、累乗は^です。日常用語とは異なりますが、Excelと同じです。 2 * 3 ## [1] 6 10 / 2 ## [1] 5 4 ^ 2 ## [1] 16 ここまでは数値同士で計算させていましたが、数値を代入したオブジェクトも使うことができます。例えば、`age’に年齢を代入しておき、10年後の年齢を計算させてみましょう。 age &lt;- 20 age + 10 ## [1] 30 ここまでは計算結果を単に表示させていました。計算結果をオブジェクトに代入することもできます。 例えば、1 + 1の結果をone_plus_oneというオブジェクトに代入してみましょう。 one_plus_one &lt;- 1 + 1 one_plus_one ## [1] 2 オブジェクトone_plus_oneには計算結果2が代入されています。 練習問題 オブジェクトaに3を、オブジェクトbに4を代入してください。 a, bそれぞれを2乗したものの和をとり、結果が25となることを確認してください。 3.3 5.3 関数 Rではオブジェクトから別のオブジェクトを生成するために「関数（function）」を用います。 関数の使い方に慣れていきましょう。 関数は関数名(引数)という構造で使います。 引数（argument）は「ひきすう」と読みます。 ここでは、簡単な関数の例を紹介します。 その他の関数はその都度紹介します。 3.3.1 数値に対する関数 皆さんが数学で勉強してきた関数をRの関数として使うことができます。例えば平方根をとる関数sqrt()を使ってみましょう。 sqrt(4) ## [1] 2 ここでは、sqrt()が関数、引数は4です。4の平方根をとった結果として2が表示されています。他の数式として例えば自然対数をとるlog()があります。 練習問題 オブジェクトaに3を、オブジェクトbに4を代入してください。（前の問題と同様） a, bそれぞれの2乗して和をとったものの平方根をとり、結果が5となることを確認してください。 ヒント：前の問題の計算全体をsqrt()のかっこでくくってください。 3.3.2 ベクトルに対する関数 関数の引数は数値だけでなく、ベクトルをとることもできます。統計分析ではこちらをよく使います。例えば、年齢のデータが入ったベクトルage_vector &lt;- c(18, 21, 22, 23, 34)を考えます。 例えば、ベクトルの最小値を取り出すmin()を使ってみましょう。 age_vector &lt;- c(18, 21, 22, 23, 34) min(age_vector) ## [1] 18 一番年齢が若い人が18歳であることが確認できます。最大値を取り出すのはmax()です。 心理学統計法で学んだ平均・標準偏差などの統計量も計算することができます。平均はmean()、中央値はmedian()、（不偏）標準偏差はsd()を使います。 mean(age_vector) ## [1] 23.6 median(age_vector) ## [1] 22 sd(age_vector) ## [1] 6.107373 練習問題 オブジェクトincome_vectorに数値のベクトル10, 100, 1000, 10000, 100000を代入してください。 income_vectorの平均・中央値・標準偏差をそれぞれ求めてください。 3.4 データフレーム 多くのデータは、表形式でまとめられます。 縦方向に観測値を、横方向に変数を並べたデータのことをRではデータフレームと呼びます。 例として、年齢のベクトルage_vectorと性別のベクトルgender_vectorを合わせてデータフレームを作成してみましょう。 データフレームを作成する関数はdata.frame()です。 age &lt;- c(18, 21, 22, 23, 34) #年齢のベクトルの作成 gender &lt;- c(&quot;female&quot;, &quot;male&quot;, &quot;male&quot;, &quot;female&quot;, &quot;female&quot;) #性別のベクトルの作成 first_dataframe &lt;- data.frame(age, gender) first_dataframe ## age gender ## 1 18 female ## 2 21 male ## 3 22 male ## 4 23 female ## 5 34 female 1人目が18歳の女性、2人目が21歳の男性…を表すデータフレームが作成できました。 後ほどExcelファイルなどからデータのRにインポートする方法を学びますが、その際は自動的にデータフレームとしてインポートされます。 データ分析の際に、データフレームのうち特定の変数だけを使いたい場合がよくあります。 その際は、データフレーム名$変数名と表記することで、特定の変数を使うことができます。 例えば、先ほど作成したfirst_dataframeから性別の変数のみを見てみましょう。 first_dataframe$gender ## [1] &quot;female&quot; &quot;male&quot; &quot;male&quot; &quot;female&quot; &quot;female&quot; 性別のベクトルを取り出すことができました。 関数と組み合わせると、年齢の平均値を以下のように計算できます。 mean(first_dataframe$age) ## [1] 23.6 練習問題 オブジェクトincomeに数値のベクトル10, 100, 1000, 10000, 100000を代入してください。 オブジェクトcityに文字列のベクトル”ibaraki”, “takatsuki”, “ibaraki”, “takatsuki”, “takatsuki”を代入してください。 incomeとcityを合わせたデータフレームincome_dataを作成してください。 income_dataを用いて、incomeの中央値を求めてください。 "],["データの読み込み.html", "Chapter 4 データの読み込み 4.1 インポートの準備 4.2 ファイル形式別のインポート方法 4.3 インポートしたデータの確認", " Chapter 4 データの読み込み 現状では、ベースにした森先生の資料の丸写しです GW明けまでに完成させるので、外に出さないでください 森先生の以下の動画を参考にしてください GW明けまでに全ての練習問題のコードをひとつのRスクリプトに書いて提出 データ分析のためには、データをRStudioにインポート（読み込み）させなければなりません。インポートの方法は、持っているデータのファイル形式によって変わります。 4.1 インポートの準備 インポートしたいファイルは、プロジェクトと同じフォルダに入れておきましょう。 プロジェクトはChapter 2で学習しています。 インポートしたいファイルの形式も確認しておきましょう。 代表的な形式として、CSVファイル（.csv）、Excelファイル（.xlsx, .xls）があります。 拡張子が表示されていない場合はこちらを参考に表示させるようにしましょう。 インポートの前に、ファイルの1行目は変数名（英語）にしておきましょう。 4.2 ファイル形式別のインポート方法 4.2.1 CSVファイルの場合（.csv） CSVファイルの場合は、read.csvを用います。ファイルの名前がsotsuron.csvの場合、以下のように実行します。 data_original &lt;- read.csv(&quot;sotsuron.csv&quot;) これは、csvファイルの内容をdata_originalというオブジェクトに格納しています。 オブジェクト名は自由につけることができますが、わかりやすいものにしましょう。 ここでは、インポートした元データであることを明示するため、data_originalという名前にしています。 練習問題 以下から「tidy_data.csv」をダウンロード https://www.dropbox.com/s/wm46esg4dicye8j/tidy_data.csv?dl=0 read.csvを使って読み込み、dataというオブジェクトに格納 4.3 インポートしたデータの確認 上の練習問題のデータがきちんとインポートされたかどうか、確認しておきましょう。 右上のペーンの“Environment”に新しいオブジェクトができているか確認（上の例ではdata） クリックして左上のペーンに出てくるか確認 head(data)で先頭のデータを確認 str(data)で各変数の「型」（後で説明）を確認 "]]
